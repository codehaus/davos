#
# SDO user-facing messages, I18N
#

message.missing.resource = \
Message property value not found: {0}

message.pattern.invalid = \
Message property value invalid: {0}

#
# Binding-time messages
#
binding.cant.change.arity = \
Cannot set property ''{0}@{1}'' to be many-valued because it is inherited from type ''{2}@{3}'' which could not be modified

binding.dataType.notsimple = \
Annotation sdo:dataType present on property ''{0}'', but the property's type (''{1}'') is not simple

binding.propertyType.notreference = \
Property ''{0}'' in type ''{1}'' has an sdo:propertyType annotation but its type (''{2}'') is not IDREF, IDREFS or anyURI

binding.propertyChangeSummary.duplicate = \
Property ''{0}'' is a change summary property but type ''{1}'' already has a change summary property

binding.propertyChangeSummary.manyvalued = \
Property ''{0}'' in type ''{1}'' is a change summary property, so it can not be many-valued

binding.dataType.global.notsimple = \
Annotation sdo:dataType present on global property ''{0}'', but the property's type (''{1}'') is not simple

binding.propertyType.global.notreference = \
Global property ''{0}'' has an sdo:propertyType annotation but its type (''{1}'') is not IDREF, IDREFS or anyURI

binding.propertyChangeSummary.global.manyvalued = \
Global property ''{0}'' is a change summary property, so it can not be many-valued

binding.dataType.prefixnotfound = \
Could not find URI for prefix ''{0}'' for annotation sdo:dataType on property ''{1}''

binding.dataType.sdoString = \
If sdo:string and sdo:dataType are present on the same property, sdo:dataTpe must equal sdo:string, property ''{1}''

binding.propertyType.prefixnotfound = \
Could not find URI for prefix ''{0}'' for annotation sdo:propertyType on property ''{1}''

binding.sdoName.type.conflict = \
Conflict: two types configured with the same sdo:name: ''{0}''

binding.sdoName.conflict = \
Conflict: this SDO type name is already used: ''{0}''. Please use an ''sdo:name'' annotation on the current \
<complexType> or <simpleType> element to change the name

binding.sdoName.type.conflict.inner = \
Conflict: this SDO type name is already used: ''{0}''. Please use an ''sdo:name'' annotation or use the \
''-sdoanontypenames namesComposite'' option on the command-line SDO compiler

binding.sdoName.property.predefined = \
Cannot use property name ''{0}'' in type ''{1}'' because it conflicts with one of the predefined DataObject properties

binding.sdoName.property.conflict = \
Cannot use property name ''{0}'' in type ''{1}'' because it conflicts with one of the other property names

binding.opposite.typenotgood = \
Property ''{0}'' on type ''{1}'' is declared as the opposite of property ''{2}'' on type ''{3}'', but the type of property ''{2}'' is ''{4}''

binding.opposite.readOnly = \
Property ''{0}'' on type ''{1} and property ''{2}'' on type ''{3}'' are declared as opposites but do not have the same value for readOnly

binding.opposite.anotherProperty = \
Property ''{0}'' on type ''{1}'' declares property ''{2}'' on type ''{3}'' as its opposite, but that property declares as its own opposite another property (''{4}'' on type ''{5}'')

binding.opposite.containment = \
Property ''{0}'' on type ''{1}'' is many-valued and declares property ''{2}'' on type ''{3}'' as its opposite, but that property is a containment property

binding.opposite.precompiled = \
Property ''{0}'' on type ''{1}'' declares type ''{2}'' as its opposite type, but this type does not have property ''{3}'' declared and is precompiled

binding.substitution.notFound = \
Could not find global property for element ''{0}'', which is referred to as a substitution group member for property ''{1}''

binding.type.notfound = \
Could not find SDO type ''{0}'' among the list of types to be compiled or in the set of precompiled types

binding.elemattr.notfound = \
Could not find SDO property corresponding to {0,choice,0#element|1#attribute} ''{1}'' in the set of precompiled Schemas

binding.schema.readProblem = \
Problem reading Schema file(s)

binding.schema.compileProblem = \
Problem compiling Schema file(s)

binding.wsdl.readProblem = \
Problem reading WSDL file ''{0}''

binding.wsdl.compileProblem = \
Problem processing WSDL file ''{0}''

binding.wsdl.schemaProblem = \
Schema compilation error while processing WSDL file ''{0}''

binding.annotation.classNotFound = \
Class not available in current classLoader ''{0}''

#
# Marshal-time messages
#
marshal.xsitype.notglobal = \
Could not set xsi:type for type ''{0}'' because is not a global Schema type

marshal.xsitype.notassignable = \
Actual type ''{0}'' for element ''{1}@{2}'' is not derived from the declared type (''{3}'') for that element

marshal.reference.notintree = \
Could not marshal the value of property ''{0}'' on object ''{1}'' because it is a reference to an object outside of the current XML tree

unmarshal.validation = \
Validation error while loading document: {0}

marshal.validation = \
Validation error while saving document: {0}

marshal.wronginstanceclass = \
Could not marshal value ''{0}'' of type ''{1}'' (property ''{2}@{3}''): Actual class (''{4}'') is different than the expected class: (''{5}'')

#
# Unmarshal-time messages
#
unmarshal.xsitype.notassignable = \
Type ''{0}'' (specified as the value of xsi:type) is not derived from expected type ''{1}'' and cannot be used in its place

unmarshal.xsitype.notfound = \
Could not find xsi:type ''{0}@{1}''

unmarshal.xsitype.javaclass = \
Type ''{0}'' (specified as the value of xsi:type) has Java instance class ''{1}'', but this Java class is not \
derived from the Java instance class of the declared type, ''{2}'' (''{3}'')

unmarshal.type.notopen.element = \
Current type ''{0}'' is not declared to contain an element ''{1}@{2}'' (and is not an open type)

unmarshal.type.notopen.element.badnamespace = \
Current type ''{0}'' is not declared to contain an element ''{1}@{2}'', however it is declared to contain element \
''{3}@{4}''. Please check the namespace declarations and add one if necessary. 

unmarshal.type.notopen.attribute = \
Current type ''{0}'' is not declared to contain an attribute ''{1}@{2}'' (and is not an open type)

unmarshal.xpath.compile = \
Could not compile XPath ''{0}'': {1}

unmarshal.simple.noconstructor = \
User-defined class ''{0}'' must have a public String constructor for SDO unmarshalling

unmarshal.simple.constructorexception = \
Exception while trying to construct value of user-defined class ''{0}'': {1}

unmarshal.simple.conversionfailed = \
Could not convert value ''{0}'' (property ''{2}@{3}'') to type ''{1}'': {4}

unmarshal.simple.unknowntype = \
Cannot create an instance of type ''{0}'' (property ''{2}@{3}'') because it doesn't match any of the predefined SDO types, for value: ''{1}''

unmarshal.simple.dateconversion = \
String ''{0}'' is not a valid lexical representation for type ''{1}''; valid values are of the form: ''{2}''

unmarshal.qname.zerolength = \
Zero length for QName local part

unmarshal.changesummary.notmodification = \
Invalid change summary representation: property ''{0}'' is of a simple type, but the corresponding change is not a modification

unmarshal.changesummary.notmultiple = \
Invalid change summary representation: property ''{0}'' is not multiple, so the reference to the new value must not be part of the change summary

unmarshal.xpath.result = \
The xpath expression refers to an element that was not found: ''{0}''

unmarshal.xpath.notdataobject = \
When resolving reference ''{0}'', expected a DataObject but got back ''{1}''

unmarshal.idref.result = \
The idref refers to an element that was not found (no matching id found): ''{0}''

unmarshal.bidirectional = \
Bidirectional property ''{0}'' contains a reference to data object ''{1}'', but that data doject's corresponding property \
(''{2}'') does not refer back to this data object

unmarshal.changesummary.conversion1 = \
Invalid change summary representation: Cannot convert value ''{0}'' to a DataObject for element ''{1}@{2}''

unmarshal.changesummary.conversion2 = \
Invalid change summary representation: Was expecting a complex content element for ''{0}@{1}''

#
# Validation messages
#
validation.globalelement = \
Global element ''{0}'' not found

#
# Schema generation messages
#
xsdgenerator.notsameuri = \
All the types passed into XSDHHelper.generate(List) must be in the same URI (found two different URIs: ''{0}'' and ''{1}'')

xsdgenerator.invalidncname = \
Type name ''{0}'' is not a valid NCName

xsdgenerator.toomanybasetypes = \
XMLSchemas can only be generated for types that have one single base type. Type ''{0}'' has {1}

xsdgenerator.invaliddefault = \
Could not generate default for property ''{0}@{1}'' of type ''{2}'': the actual class of the value (''{3}'') \
is different than the instance class of the type: (''{4}'')

xml.prefix.notdeclared.xsitype = \
Undeclared prefix ''{0}'' while resolving xsi:type ''{1}''

xml.prefix.notdeclared = \
Use of undefined namespace prefix:  ''{0}''

xml.prefix.malformed1 = \
Found ''xmlns:'' without prefix

xml.prefix.defaultnamespace = \
"Can't map prefix ''{0}'' to the default namespace

xml.prefix.malformed2 = \
Prefix can't begin with XML: ''{0}''

xml.saxsaver.userexception = \
User exception encountered during the save operation: {0}

xml.staxsaver.streamexception = \
Could not write XML to the output stream: {0}

xml.writer.encoding.unrecognized = \
Unrecognized encoding: {0}

xml.writer.encoding.unsupported = \
Unsupported encoding: {0}

#
# SDO Path
#
path.parse.unexpectedEnd = \
Unexpected end of expression.

path.parse.expectingSecondDot = \
Expecting second ., received '{0}'.

path.parse.expecting1 = \
Expecting ''{0}'', received ''{1}''.

path.parse.expecting2 = \
Expecting ''{0}'' or ''{1}'', received ''{2}''.

path.parse.expecting3 = \
Expecting ''{0}'', ''{1}'' or ''{2}'', received ''{3}''.

path.parse.expecting4 = \
Expecting ''{0}'', ''{1}'' , ''{2}'' or ''{3}'', received ''{4}''.

path.parse.expecting5 = \
Expecting ''{0}'', ''{1}'' , ''{2}'', ''{3}'' or ''{4}'', received ''{5}''.

path.run.propertyNotAllowed = \
Property ''{0}'' not allowed on type ''{1}'' 

path.parse.path.terminated.in.uri.literal=Path terminated in URI literal

path.parse.expected.quote=Expected quote (\" or ')
path.parse.current.node.variable.name.should.not.start.with.dollar=Current node variable name should not start with '$'.
path.parse.xpath.expression.not.supported.0=XPath expression not supported: {0}
path.parse.index.in.predicate.is.a.number.bigger.than.0=Index in predicate is a number bigger than 0.
path.parse.invalid.predicate.in.expresion=Invalid predicate in expresion.
path.parse.expected.prefix.after.declare.namespace=Expected prefix after 'declare namespace'
path.parse.redefinition.of.namespace.prefix.0=Redefinition of namespace prefix: {0}
path.parse.redefinition.of.default.element.namespace=Redefinition of default element namespace
path.parse.default.namespace.declaration.must.end.with.semicolon=Default Namespace declaration must end with ;
path.parse.xpath.union.predicate.not.supported=Could not compile XPath ''{0}'': Union expressions ('|') and predicates in the same XPath are not supported
unexpected.char.0=Unexpected char ''{0}''
path.redefinition.of.namespace.prefix.1=Redefinition of namespace prefix: ''{0}'' to ''{1}''
path.run.undefined.prefix.0=Undefined prefix: {0}
path.run.simplevalue.typemismatch=Type mismatch when traversing property ''{0}@{1}'', expected type ''{2}'' but found Java class ''{3}''
